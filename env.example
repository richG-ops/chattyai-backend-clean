# Google OAuth Credentials
GOOGLE_CREDENTIALS='{"web":{"client_id":"YOUR_CLIENT_ID","client_secret":"YOUR_CLIENT_SECRET","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","redirect_uris":["http://localhost:4000/auth/google/callback"]}}'

# Google OAuth Token
GOOGLE_TOKEN='{"access_token":"YOUR_ACCESS_TOKEN","refresh_token":"YOUR_REFRESH_TOKEN","scope":"https://www.googleapis.com/auth/calendar","token_type":"Bearer","expiry_date":1234567890}'

# Twilio (set real values in hosting provider, not committed)
TWILIO_ACCOUNT_SID='YOUR_TWILIO_ACCOUNT_SID'
TWILIO_AUTH_TOKEN='YOUR_TWILIO_AUTH_TOKEN'
TWILIO_FROM_NUMBER='+1XXXXXXXXXX'

# JWT Secret (generate with: openssl rand -base64 32)
JWT_SECRET='your-super-secret-jwt-key-minimum-256-bits'

# Database
DATABASE_URL='postgresql://user:password@localhost:5432/thechattyai'

# Redis (optional)
REDIS_URL='redis://localhost:6379'

# Server
PORT=4000
NODE_ENV=production 

# NotificationAPI (primary SMS)
NOTIFICATIONAPI_APP_ID=''
NOTIFICATIONAPI_SECRET=''
NOTIFICATIONAPI_SMS_TYPE='chattyai_'
SMS_PROVIDER='notificationapi,twilio'

# Runtime
DEV_MODE=false

# Calendar Provider
# Set CALENDAR_PROVIDER=calcom to use Cal.com directly, otherwise legacy calendar bot is used
CALENDAR_PROVIDER=calcom

# Legacy calendar bot (if not using provider)
CALENDAR_API_URL=https://<your-calendar-bot-render-url>
TENANT_JWT=

# Cal.com (when CALENDAR_PROVIDER=calcom)
CAL_API_BASE=https://api.cal.com
CAL_API_KEY=
CAL_EVENT_TYPE_ID=

TENANT_TZ=America/Los_Angeles

# Notifications
NOTIFY_SMS=true
REMINDER_24H=true
REMINDER_2H=true

# Debug & Monitoring
DEBUG_API_KEY=your-debug-api-key-here
SENTRY_DSN=
